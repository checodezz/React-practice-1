import "./App.css";

//1. Given an array of objects representing books, write a React component to display the details of books with the genre "Science Fiction".

const Books = ({ books, genre }) => {
  const bookDetails = books.find((book) => book.genre === genre);
  return (
    <div>
      <h2>Book Details</h2>
      <p>Title: {bookDetails.title}</p>
      <p>Genre: {bookDetails.genre}</p>
    </div>
  );
};

//2. Create a React component to show the details of users with an "Admin" role from an array of user objects.

const Users = ({ users, role }) => {
  const userDetails = users.filter((user) => user.role === role);
  const userDetailList = userDetails.map((user) => (
    <div key={user.id}>
      <p>Name: {user.name}</p>
      <p>Role: {user.role}</p>
      <hr />
    </div>
  ));
  return (
    <>
      <h2>User Details</h2>
      {userDetailList}
    </>
  );
};

//3. Create a React component to display all information about products with a price above $100.

const Products = ({ products, price }) => {
  const productDetails = products.filter((product) => product.price > price);
  const productDetailsList = productDetails.map((product) => (
    <div key={product.id}>
      <p>Name: {product.name}</p>
      <p>Name: {product.name}</p>
      <p>Price: $ {product.price}</p>
      <p>Color: {product.features.color}</p>
      <p>
        Water Proof: {product.features.isWaterProof === true ? "Yes" : "No"}
      </p>
      <hr />
    </div>
  ));
  return (
    <>
      <h2>Product Details</h2>
      {productDetailsList}
    </>
  );
};

//4. Create a React component to show the details of cities with a population over 10 lakh.

const Cities = ({ cities, population }) => {
  const cityDetails = cities.filter((city) => city.population > population);
  const cityDetailsList = cityDetails.map((city) => (
    <div key={city.id}>
      <p>City: {city.name}</p>
      <p>Population: {city.population}</p>
      <hr />
    </div>
  ));
  return (
    <>
      <h2>City Details</h2>
      {cityDetailsList}
    </>
  );
};

//5. Create a React component to display information about movies released after 2015.

const Movies = ({ movies, year }) => {
  const movieDetails = movies.filter((movie) => movie.releaseYear > year);
  const movieDetailsList = movieDetails.map((movie) => (
    <div key={movie.id}>
      <p>Name: {movie.title}</p>
      <p>Release Year: {movie.releaseYear}</p>
      <hr />
    </div>
  ));
  return (
    <>
      <h2>Movie Details</h2>
      {movieDetailsList}
    </>
  );
};

//6. Create a React component to show details of podcasts that are marked as "Featured".

const Podcast = ({ podcasts }) => {
  const podcastDetails = podcasts.filter((pod) => pod.featured);
  const podcastDetailsList = podcastDetails.map((pod) => (
    <div key={pod.id}>
      <p>Title :{pod.title}</p>
      <p>Host :{pod.host.join(", ")}</p>
      <p>Featured: {pod.featured ? "Yes" : "No"}</p>
      <hr />
    </div>
  ));
  return (
    <>
      <h2>Podcast Details</h2>
      {podcastDetailsList}
    </>
  );
};

//7. Create a React component to show the average duration of movies released in 2000 and above.
const Movies2 = ({ movies }) => {
  const totalDuration = movies.reduce((acc, curr) => {
   return curr.releaseYear > 2000 ? acc + curr.duration : acc 
  },0);
  const moviesCount = movies.filter(movie => movie.releaseYear > 2000).length
  const averageDuration = moviesCount > 0 ? totalDuration / moviesCount : 0 

  return (
    <div>
    <h2>Average Duration of movies relased year &gt; 2000 </h2>
      {averageDuration}
    </div>
  )
};

//8. Create a React component to display the total number of tasks completed.

const Tasks = ({tasks}) => {
  const completedTasks = tasks.reduce((acc, curr) => {
    return curr.completed ? acc + 1 : acc
  },0)
  return (
    <div>
    <h2>Total Number of completed tasks</h2>
      {completedTasks}
    </div>
  )
}

//9. Create a React component to display the total distance traveled by my vehicles.

const Vehicle = ({vehicles}) => {
  const totalDistance = vehicles.reduce((acc,curr)=> acc + curr.distance ,0)
  return (
    <div>
    <h2>Total Distance Travelled</h2>
      {totalDistance}
    </div>
  )
}

//10. Create a React component to dsiplay the total revenue generated by all sales transactions.
const Sales = ({sales}) => {
  const totalRevenue = sales.reduce((acc, curr) => acc + (curr.price * curr.quantity),0)

  return (
    <div>
    <h2>Total Revenue</h2>
      {totalRevenue}
    </div>
  )
}

export default function App() {
  const movies2 = [
    { id: 1, title: "The Matrix", duration: 136, releaseYear: 1999 },
    { id: 2, title: "Inception", duration: 148, releaseYear: 2010 },
    { id: 3, title: "Avatar", duration: 162, releaseYear: 2009 },
  ];

  const books = [
    { id: 1, title: "Dune", genre: "Science Fiction" },
    { id: 2, title: "Neuromancer", genre: "Science Fiction" },
    { id: 3, title: "Foundation", genre: "Sci-fi" },
  ];

  const users = [
    { id: 1, name: "Alice", role: "User" },
    { id: 2, name: "Bob", role: "Admin" },
    { id: 3, name: "Charlie", role: "User" },
    { id: 4, name: "John", role: "Admin" },
  ];

  const products = [
    {
      id: 1,
      name: "Laptop",
      price: 1200,
      features: { color: "green", isWaterProof: false },
    },
    {
      id: 2,
      name: "Smartphone",
      price: 800,
      features: { color: "blue", isWaterProof: true },
    },
    {
      id: 3,
      name: "Headphones",
      price: 150,
      features: { color: "silver", isWaterProof: false },
    },
  ];

  const cities = [
    { id: 1, name: "New York", population: 8500000 },
    { id: 2, name: "Los Angeles", population: 539900 },
    { id: 3, name: "Chicago", population: 2700000 },
  ];

  const movies = [
    { id: 1, title: "Inception", releaseYear: 2010 },
    { id: 2, title: "La La Land", releaseYear: 2016 },
    { id: 3, title: "Interstellar", releaseYear: 2014 },
    { id: 4, title: "Dune 2", releaseYear: 2024 },
  ];

  const podcasts = [
    { id: 1, title: "Tech Talk", host: ["host 1"], featured: true },
    { id: 2, title: "Business Insights", host: ["host 2"], featured: false },
    {
      id: 3,
      title: "Science Hour",
      host: ["host 3", "host 4"],
      featured: true,
    },
  ];

  const tasks = [
    { id: 1, description: "Complete project proposal", completed: true },
    { id: 2, description: "Review client feedback", completed: false },
    { id: 3, description: "Submit final report", completed: true },
  ];

  const vehicles = [
    { id: 1, name: "Car", distance: 150 },
    { id: 2, name: "Bicycle", distance: 10 },
    { id: 3, name: "Motorcycle", distance: 75 },
  ];

  const sales = [
    { id: 1, product: "Widget A", price: 25, quantity: 10 },
    { id: 2, product: "Gadget B", price: 50, quantity: 5 },
    { id: 3, product: "Tool C", price: 30, quantity: 8 },
  ];


  return (
    <main>
      <Books books={books} genre="Science Fiction" />
      <hr />
      <Users users={users} role="Admin" />
      <Products products={products} price={100} />
      <Cities cities={cities} population={1000000} />
      <Movies movies={movies} year={2015} />
      <Podcast podcasts={podcasts} />
      <Movies2 movies={movies2} />
      <hr/>
      <Tasks tasks={tasks}/>
      <hr/>
      <Vehicle vehicles={vehicles}/>
      <hr/>
      <Sales sales={sales}/>
    </main>
  );
}
